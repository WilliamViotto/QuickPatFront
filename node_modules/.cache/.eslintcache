[{"C:\\quickpat\\QuickPatFront\\src\\index.tsx":"1","C:\\quickpat\\QuickPatFront\\src\\App.tsx":"2","C:\\quickpat\\QuickPatFront\\src\\paginas\\home.tsx":"3","C:\\quickpat\\QuickPatFront\\src\\paginas\\login.tsx":"4","C:\\quickpat\\QuickPatFront\\src\\paginas\\monitorar.tsx":"5","C:\\quickpat\\QuickPatFront\\src\\paginas\\cadfuncionario.tsx":"6","C:\\quickpat\\QuickPatFront\\src\\paginas\\cadusuario.tsx":"7","C:\\quickpat\\QuickPatFront\\src\\paginas\\notefound.tsx":"8","C:\\quickpat\\QuickPatFront\\src\\paginas\\cadpatrimonio.tsx":"9","C:\\quickpat\\QuickPatFront\\src\\api.ts":"10","C:\\quickpat\\QuickPatFront\\src\\itensmap\\monitorarmap.tsx":"11","C:\\quickpat\\QuickPatFront\\src\\formpost\\funcionarioPost.tsx":"12","C:\\quickpat\\QuickPatFront\\src\\formpost\\patrimonioPost.tsx":"13","C:\\quickpat\\QuickPatFront\\src\\formpost\\usuarioPost.tsx":"14","C:\\quickpat\\QuickPatFront\\src\\componentes\\cabecalho\\index.tsx":"15","C:\\quickpat\\QuickPatFront\\src\\itensmap\\funcionariomap.tsx":"16","C:\\quickpat\\QuickPatFront\\src\\itensmap\\patrimoniomap.tsx":"17","C:\\quickpat\\QuickPatFront\\src\\itensmap\\usuariomap.tsx":"18","C:\\quickpat\\QuickPatFront\\src\\componentes\\menu\\index.tsx":"19","C:\\quickpat\\QuickPatFront\\src\\formpost\\monitorarPost.tsx":"20"},{"size":609,"mtime":1692753604113,"results":"21","hashOfConfig":"22"},{"size":1010,"mtime":1692753604067,"results":"23","hashOfConfig":"22"},{"size":2048,"mtime":1692753604129,"results":"24","hashOfConfig":"22"},{"size":2014,"mtime":1693270638105,"results":"25","hashOfConfig":"22"},{"size":1347,"mtime":1694479896763,"results":"26","hashOfConfig":"22"},{"size":1260,"mtime":1693960629529,"results":"27","hashOfConfig":"22"},{"size":1260,"mtime":1693960814431,"results":"28","hashOfConfig":"22"},{"size":258,"mtime":1692753604145,"results":"29","hashOfConfig":"22"},{"size":1259,"mtime":1694040397363,"results":"30","hashOfConfig":"22"},{"size":4870,"mtime":1694564727526,"results":"31","hashOfConfig":"22"},{"size":489,"mtime":1694562088946,"results":"32","hashOfConfig":"22"},{"size":4242,"mtime":1694480707588,"results":"33","hashOfConfig":"22"},{"size":4136,"mtime":1694480420538,"results":"34","hashOfConfig":"22"},{"size":4906,"mtime":1694480400618,"results":"35","hashOfConfig":"22"},{"size":678,"mtime":1692753604082,"results":"36","hashOfConfig":"22"},{"size":658,"mtime":1693961547089,"results":"37","hashOfConfig":"22"},{"size":553,"mtime":1693961256782,"results":"38","hashOfConfig":"22"},{"size":454,"mtime":1694480705435,"results":"39","hashOfConfig":"22"},{"size":1279,"mtime":1692753604082,"results":"40","hashOfConfig":"22"},{"size":4326,"mtime":1694564726090,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2azcaq",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\quickpat\\QuickPatFront\\src\\index.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\App.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\paginas\\home.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\paginas\\login.tsx",["110","111"],[],"import { Link, Navigate, useNavigate } from 'react-router-dom';\r\nimport '../estilo/estilo.css';\r\nimport { Button, Input, } from \"reactstrap\";\r\nimport { ChangeEvent, useState } from 'react';\r\nimport { api } from '../api';\r\n\r\n\r\n\r\nfunction Inicial() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [fUser, setfUser] = useState('');\r\n    const [fSenha, setfSenha] = useState('');\r\n\r\n    const handlefUserChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setfUser(e.target.value);\r\n    }\r\n\r\n    const handlefSenhaChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setfSenha(e.target.value);\r\n    }\r\n\r\n\r\n    const RealizarLogin = async () => {\r\n\r\n        let json = await api.Logar(fUser, fSenha);\r\n\r\n        if (json.userID) {\r\n            alert('Bem Vindo, ' + fUser);\r\n            navigate('/home');\r\n        } else {\r\n            alert('Usuário/Senha não encontrado, tente novamente.')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `url('/telafundo.jpg')`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n        }} className=\"div_principal\">\r\n\r\n            <div className=\"div_logopai\">\r\n                <div className=\"div_logo\">\r\n                    <img className=\"logo1\" src=\"logo.png\" alt=\"logo\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"div_elementos\">\r\n                <div className=\"space\">\r\n                    <Input onChange={handlefUserChange} placeholder=\"Usuário\" />\r\n                </div>\r\n\r\n                <div className=\"space\">\r\n                    <Input onChange={handlefSenhaChange} type=\"password\" placeholder=\"Senha\" />\r\n                </div>\r\n                <br />\r\n\r\n                <div className=\"entrar\">\r\n                    <Button onClick={RealizarLogin} color=\"success\" size=\"lg\"> Entrar </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inicial","C:\\quickpat\\QuickPatFront\\src\\paginas\\monitorar.tsx",["112"],[],"import '../estilo/estilo.css';\r\nimport Cabecalho from '../componentes/cabecalho';\r\nimport { useState } from 'react';\r\nimport { api } from '../api';\r\nimport { Monitorando } from '../componentes/types/monitorar';\r\nimport Monitoramento from '../formpost/monitorarPost';\r\n\r\nfunction Monitorar() {\r\n\r\n  const [monit, setMonitorar] = useState<Monitorando[]>([]);\r\n\r\n\r\n  const handleAddClick = async (idfuncionario: string,\r\n    idpatrimonio: string,\r\n  ) => {\r\n\r\n    let json = await api.InserirMonitorar(idfuncionario, idpatrimonio);\r\n\r\n    if (json.id) {\r\n      alert('Movimentação realizada com sucesso!');\r\n      setMonitorar((monit) => [...monit, json]);\r\n    } else {\r\n      alert(json.message)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Cabecalho\r\n        cabTexto1={\"Início\"}\r\n        cabTexto2={\"Cad. Usuário\"}\r\n        cabTexto3={\"Cad. Funcionário\"}\r\n        cabTexto4={\"Cad. Patrimônio\"}\r\n        cabTexto5={\"Monitorar\"}\r\n        cabTexto6={\"Sair\"}\r\n      />\r\n      <Monitoramento onAdd={handleAddClick} />\r\n\r\n      <br />\r\n    </div>\r\n\r\n    // {/* \r\n    // <div className='telamonitorar'>\r\n\r\n    //   {!loading &&\r\n    //     <div>\r\n    //       {usuarios.map((item, index) => (\r\n    //         <MonitorarItem data={item} />\r\n    //       ))}\r\n    //     </div>\r\n    //   }\r\n    // </div> */}\r\n\r\n  )\r\n}\r\n\r\nexport default Monitorar;","C:\\quickpat\\QuickPatFront\\src\\paginas\\cadfuncionario.tsx",["113"],[],"import '../estilo/estilo.css';\r\nimport Cabecalho from '../componentes/cabecalho';\r\nimport { useState } from 'react';\r\nimport CadFuncionario from '../formpost/funcionarioPost';\r\nimport { api } from '../api';\r\nimport { Funcionarios } from '../componentes/types/funcionarios';\r\n\r\n\r\nfunction CadastroFuncionario() {\r\n\r\n  const [funcionarios, setFuncionarios] = useState<Funcionarios[]>([]);\r\n\r\n  const handleAddClick = async (NOME_COMPLETO: string,\r\n    CARGO: string,\r\n    EMAIL: string,\r\n    CONFIRMAEMAIL: string,\r\n    TELEFONEUM: string,\r\n    DEPARTAMENTO: string,\r\n  ) => {\r\n\r\n    let json = await api.InserirFuncionarios(NOME_COMPLETO, CARGO, EMAIL, CONFIRMAEMAIL, TELEFONEUM, DEPARTAMENTO);\r\n\r\n    if (json.id) {\r\n      alert('Funcionário inserido com sucesso!');\r\n      setFuncionarios((funcionarios) => [...funcionarios, json]);\r\n    } else {\r\n      alert(json.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Cabecalho\r\n        cabTexto1={\"Início\"}\r\n        cabTexto2={\"Cad. Usuário\"}\r\n        cabTexto3={\"Cad. Funcionário\"}\r\n        cabTexto4={\"Cad. Patrimônio\"}\r\n        cabTexto5={\"Monitorar\"}\r\n        cabTexto6={\"Sair\"}\r\n      />\r\n      <CadFuncionario onAdd={handleAddClick} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CadastroFuncionario;","C:\\quickpat\\QuickPatFront\\src\\paginas\\cadusuario.tsx",["114"],[],"import '../estilo/estilo.css';\r\nimport Cabecalho from '../componentes/cabecalho';\r\nimport { useState } from 'react';\r\nimport CadUsuario from '../formpost/usuarioPost';\r\nimport { api } from '../api';\r\nimport { Usuario } from '../componentes/types/usuario';\r\n\r\n\r\n\r\nfunction CadastroUsuario() {\r\n  \r\n  const [usuarios, setUsuarios] = useState<Usuario[]>([]);\r\n\r\n  const handleAddClick = async (NOME: string,\r\n    SOBRENOME: string,\r\n    EMAIL: string,\r\n    CONFIRMAEMAIL: string,\r\n    TELEFONEUM: string,\r\n    TELEFONEDOIS: string,\r\n    LOGIN: string,\r\n    SENHA: string) => {\r\n     \r\n    let json = await api.InserirUsuarios(NOME, SOBRENOME, EMAIL, CONFIRMAEMAIL, TELEFONEUM, TELEFONEDOIS, LOGIN, SENHA );\r\n\r\n    if (json.id) {\r\n        alert('Usuario inserido com sucesso!');\r\n        setUsuarios((usuarios) => [...usuarios, json]);\r\n    } else {\r\n        alert(json.message)\r\n    }\r\n}\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Cabecalho\r\n        cabTexto1={\"Início\"}\r\n        cabTexto2={\"Cad. Usuário\"}\r\n        cabTexto3={\"Cad. Funcionário\"}\r\n        cabTexto4={\"Cad. Patrimônio\"}\r\n        cabTexto5={\"Monitorar\"}\r\n        cabTexto6={\"Sair\"}\r\n      />\r\n      <CadUsuario onAdd={handleAddClick}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CadastroUsuario;","C:\\quickpat\\QuickPatFront\\src\\paginas\\notefound.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\paginas\\cadpatrimonio.tsx",["115"],[],"import '../estilo/estilo.css';\r\nimport Cabecalho from '../componentes/cabecalho';\r\nimport { useState } from 'react';\r\nimport CadPatrimonio from '../formpost/patrimonioPost';\r\nimport { api } from '../api';\r\nimport { Patrimonio } from '../componentes/types/patrimonios';\r\n\r\nfunction CadastroPatrimonio () {\r\n\r\n  const [patrimonios, setPatrimonios] = useState<Patrimonio[]>([]);\r\n\r\n  const handleAddClick = async (NOME: string,\r\n    MODELO: string,\r\n    TIPO: string,\r\n    GRUPO: string,\r\n    VALOR: string,\r\n    DESCRICAO: string,\r\n  ) => {\r\n\r\n    let json = await api.InserirPatrimonios(NOME, MODELO, TIPO, GRUPO, parseFloat(VALOR), DESCRICAO);\r\n\r\n    if (json.id) {\r\n      alert('Patrimonios inserido com sucesso!');\r\n      setPatrimonios((patrimonios) => [...patrimonios, json]);\r\n    } else {\r\n      alert(json.message + ' VALOR TIPO:'+VALOR)\r\n    }\r\n  }\r\n    \r\n    return(\r\n      <div>\r\n        <Cabecalho\r\n          cabTexto1={\"Início\"}\r\n          cabTexto2={\"Cad. Usuário\"}\r\n          cabTexto3={\"Cad. Funcionário\"}\r\n          cabTexto4={\"Cad. Patrimônio\"}\r\n          cabTexto5={\"Monitorar\"}\r\n          cabTexto6={\"Sair\"}\r\n        />\r\n        <CadPatrimonio onAdd={handleAddClick}/>\r\n\r\n      </div>\r\n      )\r\n  }\r\n\r\nexport default CadastroPatrimonio;","C:\\quickpat\\QuickPatFront\\src\\api.ts",["116"],[],"\r\n\r\n\r\nexport const api = {\r\n\r\n    InserirUsuarios: async (nome: string, sobrenome: string, email: string, confemail: string, telum: string, teldois: string, login: string, senha: string) => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/usuarios/\",\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify\r\n                    ({\r\n                        NOME: nome,\r\n                        SOBRENOME: sobrenome,\r\n                        EMAIL: email,\r\n                        CONFIRMAEMAIL: confemail,\r\n                        TELEFONEUM: telum,\r\n                        TELEFONEDOIS: teldois,\r\n                        LOGIN: login,\r\n                        SENHA: senha,\r\n                    }),\r\n                headers: {\r\n                    'Content-type': ' application/json'\r\n                }\r\n            }\r\n        );\r\n        let json = await response.json();\r\n        console.log(json);\r\n\r\n        return json;\r\n    },\r\n\r\n    InserirFuncionarios: async (nomecompleto: string, cargo: string, email: string, confemail: string, telefoneum: string, departamento: string) => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/funcionarios/\",\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify\r\n                    ({\r\n                        NOME_COMPLETO: nomecompleto,\r\n                        CARGO: cargo,\r\n                        EMAIL: email,\r\n                        CONFIRMAEMAIL: confemail,\r\n                        TELEFONEUM: telefoneum,\r\n                        DEPARTAMENTO: departamento\r\n                    }),\r\n                headers: {\r\n                    'Content-type': ' application/json'\r\n                }\r\n            }\r\n        );\r\n        let json = await response.json();\r\n        console.log(json);\r\n\r\n        return json;\r\n    },\r\n\r\n    InserirPatrimonios: async (nome: string, modelo: string, tipo: string, grupo: string, valor: number, descricao: string) => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/patrimonios/\",\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify\r\n                    ({\r\n                        NOME: nome,\r\n                        MODELO: modelo,\r\n                        TIPO: tipo,\r\n                        GRUPO: grupo,\r\n                        VALOR: valor,\r\n                        DESCRICAO: descricao\r\n                    }),\r\n                headers: {\r\n                    'Content-type': ' application/json'\r\n                }\r\n            }\r\n        );\r\n        let json = await response.json();\r\n        console.log(json);\r\n\r\n        return json;\r\n    },\r\n\r\n    AlterarPatrimonio: async () => {\r\n\r\n    },\r\n\r\n    CarregarUsuarioUnico: async (param: string) => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/usuarios/\" + param);\r\n        let json = await response.json();\r\n        return json;\r\n    },\r\n\r\n    CarregarTodosUsuarios: async () => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/usuarios/\")\r\n        let json = await response.json();\r\n        return json;\r\n    },\r\n\r\n    InserirMonitorar: async (FUNCIONARIO: string, PATRIMONIO: string,) => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/movimentacao\",\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify\r\n                    ({\r\n                        FUNCIONARIO: FUNCIONARIO,\r\n                        PATRIMONIO: PATRIMONIO,\r\n                    }),\r\n                headers: {\r\n                    'Content-type': ' application/json'\r\n                }\r\n            }\r\n        );\r\n        let json = await response.json();\r\n        console.log(json);\r\n\r\n        return json;\r\n    },\r\n\r\n    CarregarFuncionarios: async () => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/funcionarios\")\r\n        let json = await response.json();\r\n        return json;\r\n    },\r\n\r\n    CarregarPatrimonios: async () => {\r\n        let response = await fetch(\"https://quickpatbacksexta.onrender.com/patrimonios\")\r\n        let json = await response.json();\r\n        return json;\r\n    },\r\n\r\n    Logar: async (username: string, password: string) => {\r\n        {\r\n            let response = await fetch(\"https://quickpatbacksexta.onrender.com/auth/login\",\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify\r\n                        ({ username, password }),\r\n                    headers: {\r\n                        'Content-type': ' application/json; charset=utf-8'\r\n                    }\r\n                }\r\n            );\r\n\r\n            let json = await response.json();\r\n\r\n            console.log(json);\r\n            return json;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","C:\\quickpat\\QuickPatFront\\src\\itensmap\\monitorarmap.tsx",["117","118"],[],"import { Table } from 'reactstrap';\r\nimport { Monitorando } from '../componentes/types/monitorar';\r\nimport { Usuario } from '../componentes/types/usuario'\r\n\r\ntype Props = {\r\n  // Aqui devemos colocar o que deverá aparecer no monitorar\r\n  data: Monitorando\r\n}\r\n\r\n\r\nfunction MonitorarItem({ data }: Props) {\r\n  return (\r\n    <>      \r\n        <tr>\r\n          <td>{data.FUNCIONARIO} </td>\r\n          <td>{data.PATRIMONIO}</td>\r\n        </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MonitorarItem;","C:\\quickpat\\QuickPatFront\\src\\formpost\\funcionarioPost.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\formpost\\patrimonioPost.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\formpost\\usuarioPost.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\componentes\\cabecalho\\index.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\itensmap\\funcionariomap.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\itensmap\\patrimoniomap.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\itensmap\\usuariomap.tsx",["119"],[],"import { Table } from 'reactstrap';\r\nimport { Usuario } from '../componentes/types/usuario'\r\n\r\ntype Props = {\r\n  data: Usuario\r\n}\r\n\r\n\r\nfunction UsuarioItem({ data }: Props) {\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tr>\r\n          <th>Nome</th>\r\n          <th>Email</th>\r\n        </tr>\r\n        <tr>\r\n          <td>{data.NOME} </td>\r\n          <td>{data.EMAIL}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsuarioItem;","C:\\quickpat\\QuickPatFront\\src\\componentes\\menu\\index.tsx",[],[],"C:\\quickpat\\QuickPatFront\\src\\formpost\\monitorarPost.tsx",[],[],{"ruleId":"120","severity":1,"message":"121","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"125","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":15},{"ruleId":"120","severity":1,"message":"126","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":22},{"ruleId":"120","severity":1,"message":"127","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":18},{"ruleId":"120","severity":1,"message":"128","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":129,"column":9,"nodeType":"131","messageId":"132","endLine":145,"endColumn":10},{"ruleId":"120","severity":1,"message":"133","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":15},{"ruleId":"120","severity":1,"message":"134","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"120","severity":1,"message":"133","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":15},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'monit' is assigned a value but never used.","'funcionarios' is assigned a value but never used.","'usuarios' is assigned a value but never used.","'patrimonios' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Table' is defined but never used.","'Usuario' is defined but never used."]